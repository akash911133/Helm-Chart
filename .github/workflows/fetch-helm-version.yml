name: Helm Chart Update Check

on:
  push:
    branches:
      - Test  # Adjust to the branch you want to trigger this on
  pull_request:
    branches:
      - Test  # Adjust to the branch you want to trigger this on

env:
  HELM_PACKAGE_VERSION: 'v3.12.0'
  HELM_S3_PLUGIN_VERSION: 'v0.13.0'

jobs:
  helm-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Helm
        run: |
          wget "https://get.helm.sh/helm-${{ env.HELM_PACKAGE_VERSION }}-linux-amd64.tar.gz"
          tar -xzvf "helm-${{ env.HELM_PACKAGE_VERSION }}-linux-amd64.tar.gz"
          sudo mv linux-amd64/helm /usr/local/bin/helm

      - name: List files for debugging
        run: |
          ls -la
          cat akash.json

      - name: Install jq
        run: |
          sudo apt-get update -y
          sudo apt-get install jq -y

      - name: Update Terraform Variables
        run: |
          ls -la  # Verify the current directory structure
          python3 ./Terraform/update_tf_variables.py  # Adjust the path as needed

      - name: Add Helm repo and check versions
        run: |
          # Read the list of charts from akash.json
          charts=$(jq -c '.charts[]' akash.json)

          # Iterate over each chart
          echo "$charts" | while IFS= read -r chart; do
            chart_name=$(echo "$chart" | jq -r '.chart')
            repository=$(echo "$chart" | jq -r '.repository')
            version=$(echo "$chart" | jq -r '.version')

            echo "Checking chart: $chart_name"
            echo "Repository: $repository"
            echo "Current Version: $version"

            # Add Helm repo
            helm repo add $chart_name $repository

            # Update Helm repos
            helm repo update

            # Search for available versions
            latest_version=$(helm search repo $chart_name/$chart_name --versions | grep -oP '\d+\.\d+\.\d+' | head -n 1)

            # Compare versions
            if dpkg --compare-versions "$version" lt "$latest_version"; then
              echo -e "\n\033[34mVersion update needed for $chart_name. Current version: $version, Latest version: $latest_version\033[0m\n"
              # You can add further actions here if an update is needed
            else
              echo "No update needed for $chart_name. Current version: $version"
            fi
          done
