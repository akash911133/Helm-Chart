name: Update Helm Charts and Terraform Variables

on:
  push:
    branches:
      - update-helm
  schedule:
    - cron: '0 0 * * 0' # Run every Sunday at midnight UTC

env:
  HELM_PACKAGE_VERSION: 'v3.12.0'
  HELM_S3_PLUGIN_VERSION: 'v0.13.0'

jobs:
  update-charts:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          # Install Helm
           wget "https://get.helm.sh/helm-${{ env.HELM_PACKAGE_VERSION }}-linux-amd64.tar.gz"
          tar -xzvf "helm-${{ env.HELM_PACKAGE_VERSION }}-linux-amd64.tar.gz"
          sudo mv linux-amd64/helm /usr/local/bin/helm
          
          # Install yq for YAML parsing
          sudo apt-get update && sudo apt-get install -y jq
          pip install yq

      - name: Parse helmchart.yaml and update input.tf
        run: |
          # Read chart names from helmchart.yaml
          charts=$(yq eval '.charts[].chart' helmchart.yaml)
          
          for chart in $charts; do
            repository=$(yq eval ".charts[] | select(.chart == \"$chart\") | .repository" helmchart.yaml)
            
            # Add Helm repo if not already added
            if ! helm repo list | grep -q "$chart"; then
              helm repo add "$chart" "$repository"
            fi

            # Update Helm repo
            helm repo update

            # Get the latest version available
            latest_version=$(helm search repo "$chart/$chart" --versions | grep -oP '\d+\.\d+\.\d+' | head -n 1)

            # Get current version from input.tf
            current_version=$(grep -oP "(?<=variable \"$chart\" {\n default = \")\d+\.\d+\.\d+" input.tf)

            # Compare versions and update Terraform variable if necessary
            if [ "$(printf '%s\n' "$latest_version" "$current_version" | sort -V | head -n1)" != "$current_version" ]; then
              sed -i "s/variable \"$chart\" {\n default = \"$current_version\"/variable \"$chart\" {\n default = \"$latest_version\"/g" input.tf
              echo "Updated $chart to version $latest_version in input.tf"
            fi
          done
