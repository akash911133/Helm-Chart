name: Helm Chart Update Check
on:
  push:
    branches:
      - optimized
      
env:
  HELM_PACKAGE_VERSION: 'v3.12.0'
  HELM_S3_PLUGIN_VERSION: 'v0.13.0'
  UPDATE_NEEDED: 'false'

jobs:
  helm-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Helm
        run: |
          wget "https://get.helm.sh/helm-${{ env.HELM_PACKAGE_VERSION }}-linux-amd64.tar.gz"
          tar -xzvf "helm-${{ env.HELM_PACKAGE_VERSION }}-linux-amd64.tar.gz"
          sudo mv linux-amd64/helm /usr/local/bin/helm

      - name: Install jq
        run: |
          sudo apt-get update -y
          sudo apt-get install jq -y

      - name: Check and Update Helm chart versions
        id: check-versions
        run: |
          charts=$(jq -c '.charts[]' akash.json)

          update_needed=false

          for chart in $charts; do
            chart_name=$(echo "$chart" | jq -r '.chart')
            repository=$(echo "$chart" | jq -r '.repository')
            version=$(echo "$chart" | jq -r '.version' | sed 's/^v//')

            echo "Checking chart: $chart_name"
            echo "Repository: $repository"
            echo "Current Version: $version"

            helm repo add "$chart_name" "$repository" || true
            helm repo update

            latest_version=$(helm search repo "$chart_name/$chart_name" --versions | grep -oP '\d+\.\d+\.\d+' | head -n 1)

            echo "input.tf before update:"
            cat Terraform/input.tf

            if dpkg --compare-versions "$version" lt "$latest_version"; then
              echo -e "\n\033[34mVersion update needed for $chart_name. Current version: v$version, Latest version: v$latest_version\033[0m\n"
              update_needed=true

              sed -i '/"'$chart_name'"/{n;s/"'v$version'"/"'v$latest_version'"/}' Terraform/input.tf

              echo "input.tf after update:"
              cat Terraform/input.tf

              git config --global user.name 'github-actions[bot]'
              git config --global user.email 'github-actions[bot]@users.noreply.github.com'
              git checkout -b "update-helm-version-$chart_name"

              git add Terraform/input.tf
              git commit -m "Update Helm chart version for $chart_name to v$latest_version"
              git push origin HEAD:"update-helm-version-$chart_name"

              curl -s -X POST \
                -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                -H "Accept: application/vnd.github.v3+json" \
                https://api.github.com/repos/${{ github.repository }}/pulls \
                -d '{
                  "title": "Update Helm chart version for '"$chart_name"'",
                  "body": "This PR updates Helm chart '"$chart_name"' version to v'"$latest_version"'.",
                  "head": "update-helm-version-'$chart_name'",
                  "base": "optimized"
                }'

              git reset --hard origin/optimized
            else
              echo "No update needed for $chart_name. Current version: v$version"
            fi
          done

          if [ "$update_needed" = true ]; then
            echo "UPDATE_NEEDED=true" >> $GITHUB_ENV
          fi
